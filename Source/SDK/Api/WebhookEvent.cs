//==============================================================================
//
//  This file was auto-generated by a tool using the PayPal REST API schema.
//  More information: https://developer.paypal.com/docs/api/
//
//==============================================================================
using Newtonsoft.Json;
using PayPal.Util;

namespace PayPal.Api
{
    public class WebhookEvent : PayPalResourceObject
    {
        /// <summary>
        /// Identifier of the Webhooks event resource.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "id")]
        public string id { get; set; }

        /// <summary>
        /// Time the resource was created.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "create_time")]
        public string create_time { get; set; }

        /// <summary>
        /// Name of the resource contained in resource element.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "resource_type")]
        public string resource_type { get; set; }

        /// <summary>
        /// Name of the event type that occurred on resource, identified by data_resource element, to trigger the Webhooks event.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "event_type")]
        public string event_type { get; set; }

        /// <summary>
        /// A summary description of the event. E.g. A successful payment authorization was created for $$
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "summary")]
        public string summary { get; set; }

        /// <summary>
        /// This contains the resource that is identified by resource_type element.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "resource")]
        public object resource { get; set; }

        /// <summary>
        /// Retrieves the Webhooks event resource identified by event_id. Can be used to retrieve the payload for an event.
        /// </summary>
        /// <param name="apiContext">APIContext used for the API call.</param>
        /// <param name="eventId">Identifier of the Webhooks event resource.</param>
        /// <returns>WebhookEvent</returns>
        public static WebhookEvent Get(APIContext apiContext, string eventId)
        {
            // Validate the arguments to be used in the request
            ArgumentValidator.ValidateAndSetupAPIContext(apiContext);
            ArgumentValidator.Validate(eventId, "eventId");

            // Configure and send the request
            var pattern = "v1/notifications/webhooks-events/{0}";
            var resourcePath = SDKUtil.FormatURIPath(pattern, new object[] { eventId });
            return PayPalResource.ConfigureAndExecute<WebhookEvent>(apiContext, HttpMethod.GET, resourcePath);
        }

        /// <summary>
        /// Resends the Webhooks event resource identified by event_id.
        /// </summary>
        /// <param name="apiContext">APIContext used for the API call.</param>
        /// <returns>WebhookEvent</returns>
        public WebhookEvent Resend(APIContext apiContext)
        {
            return WebhookEvent.Resend(apiContext, this.id);
        }

        /// <summary>
        /// Resends the Webhooks event resource identified by event_id.
        /// </summary>
        /// <param name="apiContext">APIContext used for the API call.</param>
        /// <returns>WebhookEvent</returns>
        public static WebhookEvent Resend(APIContext apiContext, string webhookEventId)
        {
            // Validate the arguments to be used in the request
            ArgumentValidator.ValidateAndSetupAPIContext(apiContext);
            ArgumentValidator.Validate(webhookEventId, "webhookEventId");

            // Configure and send the request
            var pattern = "v1/notifications/webhooks-events/{0}/resend";
            var resourcePath = SDKUtil.FormatURIPath(pattern, new object[] { webhookEventId });
            return PayPalResource.ConfigureAndExecute<WebhookEvent>(apiContext, HttpMethod.POST, resourcePath);
        }

        /// <summary>
        /// Retrieves the list of Webhooks events resources for the application associated with token. The developers can use it to see list of past webhooks events.
        /// </summary>
        /// <param name="apiContext">APIContext used for the API call.</param>
        /// <param name="pageSize">Number of items to be returned by a GET operation</param>
        /// <param name="startTime">Resource creation time that indicates the start of a range of results.</param>
        /// <param name="endTime">Resource creation time that indicates the end of a range of results.</param>
        /// <returns>WebhookEventList</returns>
        public static WebhookEventList List(APIContext apiContext, int pageSize = 10, string startTime = "", string endTime = "")
        {
            // Validate the arguments to be used in the request
            ArgumentValidator.ValidateAndSetupAPIContext(apiContext);

            var queryParameters = new QueryParameters();
            queryParameters["page_size"] = pageSize.ToString();
            queryParameters["start_time"] = startTime;
            queryParameters["end_time"] = endTime;

            // Configure and send the request
            var resourcePath = "v1/notifications/webhooks-events" + queryParameters.ToUrlFormattedString();
            return PayPalResource.ConfigureAndExecute<WebhookEventList>(apiContext, HttpMethod.GET, resourcePath);
        }
    }
}
